package com.wiatt.engine.database.greenDao.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.wiatt.engine.database.entity.LicenseDb;
import com.wiatt.engine.database.entity.OwnerDb;
import com.wiatt.engine.database.entity.RepoDb;

import com.wiatt.engine.database.greenDao.dao.LicenseDbDao;
import com.wiatt.engine.database.greenDao.dao.OwnerDbDao;
import com.wiatt.engine.database.greenDao.dao.RepoDbDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig licenseDbDaoConfig;
    private final DaoConfig ownerDbDaoConfig;
    private final DaoConfig repoDbDaoConfig;

    private final LicenseDbDao licenseDbDao;
    private final OwnerDbDao ownerDbDao;
    private final RepoDbDao repoDbDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        licenseDbDaoConfig = daoConfigMap.get(LicenseDbDao.class).clone();
        licenseDbDaoConfig.initIdentityScope(type);

        ownerDbDaoConfig = daoConfigMap.get(OwnerDbDao.class).clone();
        ownerDbDaoConfig.initIdentityScope(type);

        repoDbDaoConfig = daoConfigMap.get(RepoDbDao.class).clone();
        repoDbDaoConfig.initIdentityScope(type);

        licenseDbDao = new LicenseDbDao(licenseDbDaoConfig, this);
        ownerDbDao = new OwnerDbDao(ownerDbDaoConfig, this);
        repoDbDao = new RepoDbDao(repoDbDaoConfig, this);

        registerDao(LicenseDb.class, licenseDbDao);
        registerDao(OwnerDb.class, ownerDbDao);
        registerDao(RepoDb.class, repoDbDao);
    }
    
    public void clear() {
        licenseDbDaoConfig.clearIdentityScope();
        ownerDbDaoConfig.clearIdentityScope();
        repoDbDaoConfig.clearIdentityScope();
    }

    public LicenseDbDao getLicenseDbDao() {
        return licenseDbDao;
    }

    public OwnerDbDao getOwnerDbDao() {
        return ownerDbDao;
    }

    public RepoDbDao getRepoDbDao() {
        return repoDbDao;
    }

}
